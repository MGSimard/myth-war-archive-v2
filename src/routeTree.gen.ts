/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as WorldIndexImport } from './routes/world/index'
import { Route as LoreIndexImport } from './routes/lore/index'
import { Route as GameHistoryIndexImport } from './routes/game-history/index'
import { Route as GuidesLevelingImport } from './routes/guides/leveling'
import { Route as AssetsMapsImport } from './routes/assets/maps'
import { Route as AssetsImagesImport } from './routes/assets/images'
import { Route as AssetsAudioImport } from './routes/assets/audio'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const WorldIndexRoute = WorldIndexImport.update({
  id: '/world/',
  path: '/world/',
  getParentRoute: () => rootRoute,
} as any)

const LoreIndexRoute = LoreIndexImport.update({
  id: '/lore/',
  path: '/lore/',
  getParentRoute: () => rootRoute,
} as any)

const GameHistoryIndexRoute = GameHistoryIndexImport.update({
  id: '/game-history/',
  path: '/game-history/',
  getParentRoute: () => rootRoute,
} as any)

const GuidesLevelingRoute = GuidesLevelingImport.update({
  id: '/guides/leveling',
  path: '/guides/leveling',
  getParentRoute: () => rootRoute,
} as any)

const AssetsMapsRoute = AssetsMapsImport.update({
  id: '/assets/maps',
  path: '/assets/maps',
  getParentRoute: () => rootRoute,
} as any)

const AssetsImagesRoute = AssetsImagesImport.update({
  id: '/assets/images',
  path: '/assets/images',
  getParentRoute: () => rootRoute,
} as any)

const AssetsAudioRoute = AssetsAudioImport.update({
  id: '/assets/audio',
  path: '/assets/audio',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/assets/audio': {
      id: '/assets/audio'
      path: '/assets/audio'
      fullPath: '/assets/audio'
      preLoaderRoute: typeof AssetsAudioImport
      parentRoute: typeof rootRoute
    }
    '/assets/images': {
      id: '/assets/images'
      path: '/assets/images'
      fullPath: '/assets/images'
      preLoaderRoute: typeof AssetsImagesImport
      parentRoute: typeof rootRoute
    }
    '/assets/maps': {
      id: '/assets/maps'
      path: '/assets/maps'
      fullPath: '/assets/maps'
      preLoaderRoute: typeof AssetsMapsImport
      parentRoute: typeof rootRoute
    }
    '/guides/leveling': {
      id: '/guides/leveling'
      path: '/guides/leveling'
      fullPath: '/guides/leveling'
      preLoaderRoute: typeof GuidesLevelingImport
      parentRoute: typeof rootRoute
    }
    '/game-history/': {
      id: '/game-history/'
      path: '/game-history'
      fullPath: '/game-history'
      preLoaderRoute: typeof GameHistoryIndexImport
      parentRoute: typeof rootRoute
    }
    '/lore/': {
      id: '/lore/'
      path: '/lore'
      fullPath: '/lore'
      preLoaderRoute: typeof LoreIndexImport
      parentRoute: typeof rootRoute
    }
    '/world/': {
      id: '/world/'
      path: '/world'
      fullPath: '/world'
      preLoaderRoute: typeof WorldIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/assets/audio': typeof AssetsAudioRoute
  '/assets/images': typeof AssetsImagesRoute
  '/assets/maps': typeof AssetsMapsRoute
  '/guides/leveling': typeof GuidesLevelingRoute
  '/game-history': typeof GameHistoryIndexRoute
  '/lore': typeof LoreIndexRoute
  '/world': typeof WorldIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/assets/audio': typeof AssetsAudioRoute
  '/assets/images': typeof AssetsImagesRoute
  '/assets/maps': typeof AssetsMapsRoute
  '/guides/leveling': typeof GuidesLevelingRoute
  '/game-history': typeof GameHistoryIndexRoute
  '/lore': typeof LoreIndexRoute
  '/world': typeof WorldIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/assets/audio': typeof AssetsAudioRoute
  '/assets/images': typeof AssetsImagesRoute
  '/assets/maps': typeof AssetsMapsRoute
  '/guides/leveling': typeof GuidesLevelingRoute
  '/game-history/': typeof GameHistoryIndexRoute
  '/lore/': typeof LoreIndexRoute
  '/world/': typeof WorldIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/assets/audio'
    | '/assets/images'
    | '/assets/maps'
    | '/guides/leveling'
    | '/game-history'
    | '/lore'
    | '/world'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/assets/audio'
    | '/assets/images'
    | '/assets/maps'
    | '/guides/leveling'
    | '/game-history'
    | '/lore'
    | '/world'
  id:
    | '__root__'
    | '/'
    | '/assets/audio'
    | '/assets/images'
    | '/assets/maps'
    | '/guides/leveling'
    | '/game-history/'
    | '/lore/'
    | '/world/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AssetsAudioRoute: typeof AssetsAudioRoute
  AssetsImagesRoute: typeof AssetsImagesRoute
  AssetsMapsRoute: typeof AssetsMapsRoute
  GuidesLevelingRoute: typeof GuidesLevelingRoute
  GameHistoryIndexRoute: typeof GameHistoryIndexRoute
  LoreIndexRoute: typeof LoreIndexRoute
  WorldIndexRoute: typeof WorldIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AssetsAudioRoute: AssetsAudioRoute,
  AssetsImagesRoute: AssetsImagesRoute,
  AssetsMapsRoute: AssetsMapsRoute,
  GuidesLevelingRoute: GuidesLevelingRoute,
  GameHistoryIndexRoute: GameHistoryIndexRoute,
  LoreIndexRoute: LoreIndexRoute,
  WorldIndexRoute: WorldIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/assets/audio",
        "/assets/images",
        "/assets/maps",
        "/guides/leveling",
        "/game-history/",
        "/lore/",
        "/world/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/assets/audio": {
      "filePath": "assets/audio.tsx"
    },
    "/assets/images": {
      "filePath": "assets/images.tsx"
    },
    "/assets/maps": {
      "filePath": "assets/maps.tsx"
    },
    "/guides/leveling": {
      "filePath": "guides/leveling.tsx"
    },
    "/game-history/": {
      "filePath": "game-history/index.tsx"
    },
    "/lore/": {
      "filePath": "lore/index.tsx"
    },
    "/world/": {
      "filePath": "world/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
