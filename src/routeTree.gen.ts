/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as WorldIndexRouteImport } from './routes/world/index'
import { Route as ToolsIndexRouteImport } from './routes/tools/index'
import { Route as LoreIndexRouteImport } from './routes/lore/index'
import { Route as GameHistoryIndexRouteImport } from './routes/game-history/index'
import { Route as CommunitiesIndexRouteImport } from './routes/communities/index'
import { Route as GuidesRebirthRouteImport } from './routes/guides/rebirth'
import { Route as GuidesLevelingRouteImport } from './routes/guides/leveling'
import { Route as AssetsMapsRouteImport } from './routes/assets/maps'
import { Route as AssetsImagesRouteImport } from './routes/assets/images'
import { Route as AssetsAudioRouteImport } from './routes/assets/audio'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const WorldIndexRoute = WorldIndexRouteImport.update({
  id: '/world/',
  path: '/world/',
  getParentRoute: () => rootRouteImport,
} as any)
const ToolsIndexRoute = ToolsIndexRouteImport.update({
  id: '/tools/',
  path: '/tools/',
  getParentRoute: () => rootRouteImport,
} as any)
const LoreIndexRoute = LoreIndexRouteImport.update({
  id: '/lore/',
  path: '/lore/',
  getParentRoute: () => rootRouteImport,
} as any)
const GameHistoryIndexRoute = GameHistoryIndexRouteImport.update({
  id: '/game-history/',
  path: '/game-history/',
  getParentRoute: () => rootRouteImport,
} as any)
const CommunitiesIndexRoute = CommunitiesIndexRouteImport.update({
  id: '/communities/',
  path: '/communities/',
  getParentRoute: () => rootRouteImport,
} as any)
const GuidesRebirthRoute = GuidesRebirthRouteImport.update({
  id: '/guides/rebirth',
  path: '/guides/rebirth',
  getParentRoute: () => rootRouteImport,
} as any)
const GuidesLevelingRoute = GuidesLevelingRouteImport.update({
  id: '/guides/leveling',
  path: '/guides/leveling',
  getParentRoute: () => rootRouteImport,
} as any)
const AssetsMapsRoute = AssetsMapsRouteImport.update({
  id: '/assets/maps',
  path: '/assets/maps',
  getParentRoute: () => rootRouteImport,
} as any)
const AssetsImagesRoute = AssetsImagesRouteImport.update({
  id: '/assets/images',
  path: '/assets/images',
  getParentRoute: () => rootRouteImport,
} as any)
const AssetsAudioRoute = AssetsAudioRouteImport.update({
  id: '/assets/audio',
  path: '/assets/audio',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/assets/audio': typeof AssetsAudioRoute
  '/assets/images': typeof AssetsImagesRoute
  '/assets/maps': typeof AssetsMapsRoute
  '/guides/leveling': typeof GuidesLevelingRoute
  '/guides/rebirth': typeof GuidesRebirthRoute
  '/communities': typeof CommunitiesIndexRoute
  '/game-history': typeof GameHistoryIndexRoute
  '/lore': typeof LoreIndexRoute
  '/tools': typeof ToolsIndexRoute
  '/world': typeof WorldIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/assets/audio': typeof AssetsAudioRoute
  '/assets/images': typeof AssetsImagesRoute
  '/assets/maps': typeof AssetsMapsRoute
  '/guides/leveling': typeof GuidesLevelingRoute
  '/guides/rebirth': typeof GuidesRebirthRoute
  '/communities': typeof CommunitiesIndexRoute
  '/game-history': typeof GameHistoryIndexRoute
  '/lore': typeof LoreIndexRoute
  '/tools': typeof ToolsIndexRoute
  '/world': typeof WorldIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/assets/audio': typeof AssetsAudioRoute
  '/assets/images': typeof AssetsImagesRoute
  '/assets/maps': typeof AssetsMapsRoute
  '/guides/leveling': typeof GuidesLevelingRoute
  '/guides/rebirth': typeof GuidesRebirthRoute
  '/communities/': typeof CommunitiesIndexRoute
  '/game-history/': typeof GameHistoryIndexRoute
  '/lore/': typeof LoreIndexRoute
  '/tools/': typeof ToolsIndexRoute
  '/world/': typeof WorldIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/assets/audio'
    | '/assets/images'
    | '/assets/maps'
    | '/guides/leveling'
    | '/guides/rebirth'
    | '/communities'
    | '/game-history'
    | '/lore'
    | '/tools'
    | '/world'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/assets/audio'
    | '/assets/images'
    | '/assets/maps'
    | '/guides/leveling'
    | '/guides/rebirth'
    | '/communities'
    | '/game-history'
    | '/lore'
    | '/tools'
    | '/world'
  id:
    | '__root__'
    | '/'
    | '/assets/audio'
    | '/assets/images'
    | '/assets/maps'
    | '/guides/leveling'
    | '/guides/rebirth'
    | '/communities/'
    | '/game-history/'
    | '/lore/'
    | '/tools/'
    | '/world/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AssetsAudioRoute: typeof AssetsAudioRoute
  AssetsImagesRoute: typeof AssetsImagesRoute
  AssetsMapsRoute: typeof AssetsMapsRoute
  GuidesLevelingRoute: typeof GuidesLevelingRoute
  GuidesRebirthRoute: typeof GuidesRebirthRoute
  CommunitiesIndexRoute: typeof CommunitiesIndexRoute
  GameHistoryIndexRoute: typeof GameHistoryIndexRoute
  LoreIndexRoute: typeof LoreIndexRoute
  ToolsIndexRoute: typeof ToolsIndexRoute
  WorldIndexRoute: typeof WorldIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/world/': {
      id: '/world/'
      path: '/world'
      fullPath: '/world'
      preLoaderRoute: typeof WorldIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tools/': {
      id: '/tools/'
      path: '/tools'
      fullPath: '/tools'
      preLoaderRoute: typeof ToolsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/lore/': {
      id: '/lore/'
      path: '/lore'
      fullPath: '/lore'
      preLoaderRoute: typeof LoreIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/game-history/': {
      id: '/game-history/'
      path: '/game-history'
      fullPath: '/game-history'
      preLoaderRoute: typeof GameHistoryIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/communities/': {
      id: '/communities/'
      path: '/communities'
      fullPath: '/communities'
      preLoaderRoute: typeof CommunitiesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/guides/rebirth': {
      id: '/guides/rebirth'
      path: '/guides/rebirth'
      fullPath: '/guides/rebirth'
      preLoaderRoute: typeof GuidesRebirthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/guides/leveling': {
      id: '/guides/leveling'
      path: '/guides/leveling'
      fullPath: '/guides/leveling'
      preLoaderRoute: typeof GuidesLevelingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/assets/maps': {
      id: '/assets/maps'
      path: '/assets/maps'
      fullPath: '/assets/maps'
      preLoaderRoute: typeof AssetsMapsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/assets/images': {
      id: '/assets/images'
      path: '/assets/images'
      fullPath: '/assets/images'
      preLoaderRoute: typeof AssetsImagesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/assets/audio': {
      id: '/assets/audio'
      path: '/assets/audio'
      fullPath: '/assets/audio'
      preLoaderRoute: typeof AssetsAudioRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AssetsAudioRoute: AssetsAudioRoute,
  AssetsImagesRoute: AssetsImagesRoute,
  AssetsMapsRoute: AssetsMapsRoute,
  GuidesLevelingRoute: GuidesLevelingRoute,
  GuidesRebirthRoute: GuidesRebirthRoute,
  CommunitiesIndexRoute: CommunitiesIndexRoute,
  GameHistoryIndexRoute: GameHistoryIndexRoute,
  LoreIndexRoute: LoreIndexRoute,
  ToolsIndexRoute: ToolsIndexRoute,
  WorldIndexRoute: WorldIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
